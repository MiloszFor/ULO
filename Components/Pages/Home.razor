@page "/"
@using Microsoft.EntityFrameworkCore
@using ULO.UI.Models.Entities
@inject ULODbContext _dbcontext

<PageTitle>Home</PageTitle>

<main>
    <div class="main-content d-flex justify-content-center align-items-center flex-column">
        <div class="news-section w-75 text-center">
            <h2>Aktualności</h2>

            @if (MatchDashboard == null || MatchDashboard.Count == 0)
            {
                <p>Brak nowych meczy.</p>
            }
            else
            {
                <div id="newsCarousel" class="carousel slide" data-ride="carousel">
                    <div class="carousel-inner">
                        @foreach (var (item, index) in MatchDashboard.Select((value, i) => (value, i)))
                        {
                            <div class="carousel-item @(index == 0 ? "active" : "")">
                                <div class="row text-center">
                                    <!-- Left Column -->
                                    <div class="col-md-4 d-flex flex-column align-items-center">
                                        <div>
                                            @if (item.HostTeamLogo != null && item.HostTeamLogo.Length > 0)
                                            {
                                                <img src="@($"data:image/png;base64,{Convert.ToBase64String(item.HostTeamLogo)}")" alt="Logo" class="rounded-circle img-fluid" style="width: 150px; height: 150px; margin-bottom: 15px;" />
                                            }
                                        </div>
                                        <div>
                                            <h3>@item.HostTeamName</h3>
                                        </div>
                                    </div>

                                    <!-- Middle Column -->
                                    <div class="col-md-4 d-flex flex-column justify-content-center">
                                        <div>
                                            <h3>@item.Address</h3>
                                        </div>
                                        <div>
                                            <h3>@item.MatchDate</h3>
                                        </div>
                                    </div>

                                    <!-- Right Column -->
                                    <div class="col-md-4 d-flex flex-column align-items-center">
                                        <div>
                                            @if (item.GuestTeamLogo != null && item.GuestTeamLogo.Length > 0)
                                            {
                                                <img src="@($"data:image/png;base64,{Convert.ToBase64String(item.GuestTeamLogo)}")" alt="Logo" class="rounded-circle img-fluid" style="width: 150px; height: 150px; margin-bottom: 15px;" />
                                            }
                                        </div>
                                        <div>
                                            <h3>@item.GuestTeamName</h3>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    <a class="carousel-control-prev" href="#newsCarousel" role="button" data-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    </a>
                    <a class="carousel-control-next" href="#newsCarousel" role="button" data-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    </a>
                </div>
            }
        </div>
    </div>
</main>

<style>
    .carousel-control-prev-icon,
    .carousel-control-next-icon {
        background-color: black; /* Set the arrow background color to black */
        border-radius: 50%; /* Add a circular shape to make it more visible */
        width: 3rem; /* Increase size for better visibility */
        height: 3rem;
    }

    #newsCarousel{
        background-color: #fff;
        border-radius: 30px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.35);
        padding: 15px;
    }
</style>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var newsCarousel = document.getElementById('newsCarousel');
        var carousel = new bootstrap.Carousel(newsCarousel, {
            interval: 10000, // 3 seconds
            pause: 'hover'  // Pause on hover
        });
    });
</script>

@code {
    public List<Aktualnosc> aktualnosci;

    public List<FutureMatchDashboard>? MatchDashboard { get; set; }

    public class FutureMatchDashboard
    {
        public string? HostTeamName { get; set; }
        public byte[]? HostTeamLogo { get; set; }
        public string? GuestTeamName { get; set; }
        public byte[]? GuestTeamLogo { get; set; }
        public string? Address { get; set; }
        public DateTime MatchDate { get; set; }
    }

    protected override async Task OnInitializedAsync()
    {
        await GetMatch();
        //aktualnosci = await _dbcontext.Aktualnosc.OrderByDescending(a => a.Date).Take(5).ToListAsync();
    }

    public async Task GetMatch()
    {
        try
        {
            MatchDashboard = await _dbcontext.Database.SqlQueryRaw<FutureMatchDashboard>(
                "SELECT TOP 5 t.TeamName AS 'HostTeamName', t.Logo AS 'HostTeamLogo', " +
                "tt.TeamName AS 'GuestTeamName', tt.Logo AS 'GuestTeamLogo', " +
                "m.Place AS 'Address', m.MatchDate AS 'MatchDate' " +
                "FROM match m " +
                "JOIN team t ON m.GuestTeamId = t.Id " +
                "JOIN team tt ON m.HostTeamId = tt.Id " +
                "WHERE m.Status = 'A' " +
                "ORDER BY m.MatchDate ASC"
            ).ToListAsync();

        }
        catch (Exception ex) { }
    }
}

