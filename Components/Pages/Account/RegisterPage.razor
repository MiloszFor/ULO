@page "/register"
@using System.Security.Claims
@using Microsoft.AspNetCore.Authentication.Cookies
@using Microsoft.AspNetCore.Authentication
@using ULO.Models.Entities
@using ULO.UI.Models
@inject ULODbContext _dbcontext
@inject NavigationManager _navigationManager

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
<link rel="stylesheet" href="css/style.css">

<style>
    .cookie-banner {
        position: fixed;
        bottom: 0;
        left: 0;
        width: 100%;
        background-color: rgba(0, 0, 0, 0.8);
        color: white;
        padding: 10px;
        text-align: center;
        z-index: 1000;
    }

</style>


<div class="container" id="container">
        <EditForm Model="@RegisterUser" OnValidSubmit="Register" FormName="RegisterForm">
            <DataAnnotationsValidator />
            <h1>Stwórz konto</h1>
            <InputText @bind-Value="RegisterUser.Login" placeholder="Login" />
            <ValidationMessage For="() =>RegisterUser.Login" />

            <InputText @bind-Value="RegisterUser.Email" placeholder="Email" />
            <ValidationMessage For="() =>RegisterUser.Email" />

            <InputText @bind-Value="RegisterUser.FirstName" placeholder="Imie" />
            <ValidationMessage For="() =>RegisterUser.FirstName" />

            <InputText @bind-Value="RegisterUser.LastName" placeholder="Nazwisko" />
            <ValidationMessage For="() =>RegisterUser.LastName" />

            <InputText @bind-Value="RegisterUser.Password" placeholder="Haslo" />
            <ValidationMessage For="() =>RegisterUser.Password" />

            <InputText @bind-Value="RegisterUser.ConfirmPassword" placeholder="Powtorz haslo" />
            <ValidationMessage For="() =>RegisterUser.ConfirmPassword" />
            <button>Zarejestruj!</button>
        </EditForm>
        <span class="text-success">@errorRegisterMessage</span>
    <button style="width:100%;"><a style="color:#fff;" href="/login">Masz już konto? Zaloguj się!</a></button>

        
</div>

<div class="cookie-banner">
    <p>
        Ta strona używa ciasteczek oraz zapisuje dane w bazie danych w celu poprawy jakości usług.
        Kontynuując korzystanie z serwisu, akceptujesz te zasady. Kliknij "Zaloguj" lub "Zarejestruj", aby zaakceptować.
    </p>
</div>

@code {
    [CascadingParameter]
    public HttpContext? HttpContext { get; set; }

    [SupplyParameterFromForm(FormName = "RegisterForm")]
    public RegisterUserDto RegisterUser { get; set; } = new();

    private string? errorLoginMessage;
    private string? errorRegisterMessage;

    public async Task Register()
    {
        bool checkUser = CheckUser(RegisterUser.Login);
        if (checkUser is true)
        {
            errorRegisterMessage = "Login jest zajęty";
            return;
        }

        User user = new User
        {
            Login = RegisterUser.Login,
            Email = RegisterUser.Email,
            FirstName = RegisterUser.FirstName,
            LastName = RegisterUser.LastName,
            Password = RegisterUser.Password,
            Rank = "User",
            Created = DateTime.Now
        };

        await _dbcontext.Users.AddAsync(user);
        await _dbcontext.SaveChangesAsync();

        _navigationManager.NavigateTo("/login");

    }
    private bool CheckUser(string login)
    {
        var result = _dbcontext.Users.Where(x => x.Login == login).FirstOrDefault();
        if (result is null) return false;
        return true;
    }
}
