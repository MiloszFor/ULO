@page "/profil"
@inject ULODbContext _dbcontext



<div class="container mt-5">
    <div class="card shadow">
        <div class="row g-0">
            <div class="col-md-4 d-flex align-items-center justify-content-center bg-light">
                <img src="https://via.placeholder.com/150" class="img-fluid rounded-circle" alt="Player Avatar" style="max-width: 150px;">
            </div>

            <div class="col-md-8">
                <div class="card-body">
                    <h3 class="card-title mb-3">Imię oraz nazwisko</h3>
                    <p class="card-text">
                        <strong>Klub:</strong> <span>Klub</span>
                    </p>
                    <p class="card-text">
                        <strong>Liczba bramek:</strong> <span>Iloś bramek</span>
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>



@code{
    [CascadingParameter]
    public Task<AuthenticationState>? AuthenticationStateTask { get; set; }

    private class UserDetails
    {
        public string? FirstName { get; set; }
        public string? LastName { get; set; }
        public string? TeamName { get; set; }
        public int Goals { get; set; }
    }

    protected override async Task OnInitializedAsync()
    {
        /*var authenticationState = await AuthenticationStateTask;
        var userLogin = authenticationState.User.FindFirst(ClaimTypes.Name)?.Value;

        if (userLogin is not null)
        {
            user = _dbcontext.Users.FirstOrDefault(u => u.Login == userLogin);
        }*/
    }
}